{"ast":null,"code":"import _asyncToGenerator from \"C:\\\\Users\\\\stephen\\\\Documents\\\\GitHub\\\\weather-app\\\\node_modules\\\\@babel\\\\runtime\\\\helpers\\\\esm\\\\asyncToGenerator.js\";\nimport * as i0 from \"@angular/core\";\nimport * as i1 from \"@angular/common/http\";\nexport class WeatherDataService {\n  constructor(http) {\n    var _this = this;\n\n    this.http = http;\n    this.zipCodes = localStorage.getItem(\"zipCodes\") ? localStorage.getItem(\"zipCodes\") : '';\n    this.weatherData = [];\n    this.loadWeatherData = /*#__PURE__*/_asyncToGenerator(function* () {\n      if (_this.zipCodes === '') {\n        return;\n      }\n\n      let data = _this.zipCodes.split(',');\n\n      for (let i = 0; i < data.length; i++) {\n        _this.http.get(environment.apiBaseUrl + `zip=zip=${data[i]}&units=imperial&appid=5a4b2d457ecbef9eb2a71e480b947604`, {\n          responseType: \"json\"\n        }).subscribe(result => {\n          _this.weatherData.push(Object.assign(Object.assign({}, result), {\n            zipcode: data[i]\n          }));\n        });\n      }\n    });\n    this.loadWeatherData();\n  }\n\n  addLoc(locZipCode) {\n    this.zipCodes = this.zipCodes === '' ? '' + locZipCode : this.zipCodes + ',' + locZipCode;\n    localStorage.setItem(\"zipCodes\", this.zipCodes);\n    this.addWeatherToList(locZipCode);\n  }\n\n  addWeatherToList(zipCode) {\n    this.http.get(`https://api.openweathermap.org/data/2.5/weather?zip=${zipCode}&units=imperial&appid=5a4b2d457ecbef9eb2a71e480b947604`, {\n      responseType: \"json\"\n    }).subscribe(result => {\n      this.weatherData.push(Object.assign(Object.assign({}, result), {\n        zipcode: zipCode\n      }));\n    });\n  }\n\n}\n\nWeatherDataService.ɵfac = function WeatherDataService_Factory(t) {\n  return new (t || WeatherDataService)(i0.ɵɵinject(i1.HttpClient));\n};\n\nWeatherDataService.ɵprov = /*@__PURE__*/i0.ɵɵdefineInjectable({\n  token: WeatherDataService,\n  factory: WeatherDataService.ɵfac,\n  providedIn: 'root'\n});","map":{"version":3,"sources":["C:/Users/stephen/Documents/GitHub/weather-app/src/app/weatherData.service.ts"],"names":["i0","i1","WeatherDataService","constructor","http","zipCodes","localStorage","getItem","weatherData","loadWeatherData","data","split","i","length","get","environment","apiBaseUrl","responseType","subscribe","result","push","Object","assign","zipcode","addLoc","locZipCode","setItem","addWeatherToList","zipCode","ɵfac","WeatherDataService_Factory","t","ɵɵinject","HttpClient","ɵprov","ɵɵdefineInjectable","token","factory","providedIn"],"mappings":";AAAA,OAAO,KAAKA,EAAZ,MAAoB,eAApB;AACA,OAAO,KAAKC,EAAZ,MAAoB,sBAApB;AACA,OAAO,MAAMC,kBAAN,CAAyB;AAC5BC,EAAAA,WAAW,CAACC,IAAD,EAAO;AAAA;;AACd,SAAKA,IAAL,GAAYA,IAAZ;AACA,SAAKC,QAAL,GAAgBC,YAAY,CAACC,OAAb,CAAqB,UAArB,IAAmCD,YAAY,CAACC,OAAb,CAAqB,UAArB,CAAnC,GAAsE,EAAtF;AACA,SAAKC,WAAL,GAAmB,EAAnB;AACA,SAAKC,eAAL,kCAAuB,aAAY;AAC/B,UAAI,KAAI,CAACJ,QAAL,KAAkB,EAAtB,EAA0B;AACtB;AACH;;AACD,UAAIK,IAAI,GAAG,KAAI,CAACL,QAAL,CAAcM,KAAd,CAAoB,GAApB,CAAX;;AACA,WAAK,IAAIC,CAAC,GAAG,CAAb,EAAgBA,CAAC,GAAGF,IAAI,CAACG,MAAzB,EAAiCD,CAAC,EAAlC,EAAsC;AAClC,QAAA,KAAI,CAACR,IAAL,CAAUU,GAAV,CAAcC,WAAW,CAACC,UAAZ,GAA0B,WAAUN,IAAI,CAACE,CAAD,CAAI,wDAA1D,EAAmH;AAC/GK,UAAAA,YAAY,EAAE;AADiG,SAAnH,EAEGC,SAFH,CAEcC,MAAD,IAAY;AACrB,UAAA,KAAI,CAACX,WAAL,CAAiBY,IAAjB,CAAsBC,MAAM,CAACC,MAAP,CAAcD,MAAM,CAACC,MAAP,CAAc,EAAd,EAAkBH,MAAlB,CAAd,EAAyC;AAAEI,YAAAA,OAAO,EAAEb,IAAI,CAACE,CAAD;AAAf,WAAzC,CAAtB;AACH,SAJD;AAKH;AACJ,KAZD;AAaA,SAAKH,eAAL;AACH;;AACDe,EAAAA,MAAM,CAACC,UAAD,EAAa;AACf,SAAKpB,QAAL,GAAgB,KAAKA,QAAL,KAAkB,EAAlB,GAAwB,KAAKoB,UAA7B,GAA4C,KAAKpB,QAAL,GAAgB,GAAhB,GAAsBoB,UAAlF;AACAnB,IAAAA,YAAY,CAACoB,OAAb,CAAqB,UAArB,EAAiC,KAAKrB,QAAtC;AACA,SAAKsB,gBAAL,CAAsBF,UAAtB;AACH;;AACDE,EAAAA,gBAAgB,CAACC,OAAD,EAAU;AACtB,SAAKxB,IAAL,CAAUU,GAAV,CAAe,uDAAsDc,OAAQ,wDAA7E,EAAsI;AAClIX,MAAAA,YAAY,EAAE;AADoH,KAAtI,EAEGC,SAFH,CAEcC,MAAD,IAAY;AACrB,WAAKX,WAAL,CAAiBY,IAAjB,CAAsBC,MAAM,CAACC,MAAP,CAAcD,MAAM,CAACC,MAAP,CAAc,EAAd,EAAkBH,MAAlB,CAAd,EAAyC;AAAEI,QAAAA,OAAO,EAAEK;AAAX,OAAzC,CAAtB;AACH,KAJD;AAKH;;AA/B2B;;AAiChC1B,kBAAkB,CAAC2B,IAAnB,GAA0B,SAASC,0BAAT,CAAoCC,CAApC,EAAuC;AAAE,SAAO,KAAKA,CAAC,IAAI7B,kBAAV,EAA8BF,EAAE,CAACgC,QAAH,CAAY/B,EAAE,CAACgC,UAAf,CAA9B,CAAP;AAAmE,CAAtI;;AACA/B,kBAAkB,CAACgC,KAAnB,GAA2B,aAAclC,EAAE,CAACmC,kBAAH,CAAsB;AAAEC,EAAAA,KAAK,EAAElC,kBAAT;AAA6BmC,EAAAA,OAAO,EAAEnC,kBAAkB,CAAC2B,IAAzD;AAA+DS,EAAAA,UAAU,EAAE;AAA3E,CAAtB,CAAzC","sourcesContent":["import * as i0 from \"@angular/core\";\r\nimport * as i1 from \"@angular/common/http\";\r\nexport class WeatherDataService {\r\n    constructor(http) {\r\n        this.http = http;\r\n        this.zipCodes = localStorage.getItem(\"zipCodes\") ? localStorage.getItem(\"zipCodes\") : '';\r\n        this.weatherData = [];\r\n        this.loadWeatherData = async () => {\r\n            if (this.zipCodes === '') {\r\n                return;\r\n            }\r\n            let data = this.zipCodes.split(',');\r\n            for (let i = 0; i < data.length; i++) {\r\n                this.http.get(environment.apiBaseUrl + `zip=zip=${data[i]}&units=imperial&appid=5a4b2d457ecbef9eb2a71e480b947604`, {\r\n                    responseType: \"json\"\r\n                }).subscribe((result) => {\r\n                    this.weatherData.push(Object.assign(Object.assign({}, result), { zipcode: data[i] }));\r\n                });\r\n            }\r\n        };\r\n        this.loadWeatherData();\r\n    }\r\n    addLoc(locZipCode) {\r\n        this.zipCodes = this.zipCodes === '' ? ('' + locZipCode) : (this.zipCodes + ',' + locZipCode);\r\n        localStorage.setItem(\"zipCodes\", this.zipCodes);\r\n        this.addWeatherToList(locZipCode);\r\n    }\r\n    addWeatherToList(zipCode) {\r\n        this.http.get(`https://api.openweathermap.org/data/2.5/weather?zip=${zipCode}&units=imperial&appid=5a4b2d457ecbef9eb2a71e480b947604`, {\r\n            responseType: \"json\"\r\n        }).subscribe((result) => {\r\n            this.weatherData.push(Object.assign(Object.assign({}, result), { zipcode: zipCode }));\r\n        });\r\n    }\r\n}\r\nWeatherDataService.ɵfac = function WeatherDataService_Factory(t) { return new (t || WeatherDataService)(i0.ɵɵinject(i1.HttpClient)); };\r\nWeatherDataService.ɵprov = /*@__PURE__*/ i0.ɵɵdefineInjectable({ token: WeatherDataService, factory: WeatherDataService.ɵfac, providedIn: 'root' });\r\n"]},"metadata":{},"sourceType":"module"}