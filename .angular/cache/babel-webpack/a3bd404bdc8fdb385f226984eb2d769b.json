{"ast":null,"code":"import _asyncToGenerator from \"C:\\\\Users\\\\stephen\\\\Documents\\\\GitHub\\\\weather-app\\\\node_modules\\\\@babel\\\\runtime\\\\helpers\\\\esm\\\\asyncToGenerator.js\";\nimport { environment } from \"src/environments/environment\";\nimport * as i0 from \"@angular/core\";\nimport * as i1 from \"@angular/common/http\";\nexport class WeatherDataService {\n  constructor(http) {\n    var _this = this;\n\n    this.http = http;\n    this.zipCodes = localStorage.getItem(\"zipCodes\") ? localStorage.getItem(\"zipCodes\") : '';\n    this.weatherData = [];\n    this.loadWeatherData = /*#__PURE__*/_asyncToGenerator(function* () {\n      if (_this.zipCodes === '') {\n        return;\n      }\n\n      let data = _this.zipCodes.split(',');\n\n      for (let i = 0; i < data.length; i++) {\n        _this.http.get(environment.apiBaseUrl + `weather?zip=${data[i]}&units=imperial&appid=5a4b2d457ecbef9eb2a71e480b947604`, {\n          responseType: \"json\"\n        }).subscribe(result => {\n          _this.weatherData.push(Object.assign(Object.assign({}, result), {\n            zipcode: data[i]\n          }));\n        });\n      }\n    });\n    this.loadWeatherData();\n  }\n\n  addLoc(locZipCode) {\n    this.zipCodes = this.zipCodes === '' ? '' + locZipCode : this.zipCodes + ',' + locZipCode;\n    localStorage.setItem(\"zipCodes\", this.zipCodes);\n    this.addWeatherToList(locZipCode);\n  }\n\n  addWeatherToList(zipCode) {\n    this.http.get(environment.apiBaseUrl + `zip=${zipCode}&units=imperial&appid=5a4b2d457ecbef9eb2a71e480b947604`, {\n      responseType: \"json\"\n    }).subscribe(result => {\n      this.weatherData.push(Object.assign(Object.assign({}, result), {\n        zipcode: zipCode\n      }));\n    });\n  }\n\n  remove(index) {\n    let data = localStorage.getItem(\"zipCodes\");\n    let newZipCodes = '';\n    data = data.split(',');\n    data.splice(index, 1);\n\n    for (let i = 0; i < data.length; i++) {\n      newZipCodes = newZipCodes === '' ? data[i] : newZipCodes + ',' + data[i];\n    }\n\n    localStorage.setItem(\"zipCodes\", newZipCodes);\n    this.weatherData.splice(index, 1);\n  }\n\n}\n\nWeatherDataService.ɵfac = function WeatherDataService_Factory(t) {\n  return new (t || WeatherDataService)(i0.ɵɵinject(i1.HttpClient));\n};\n\nWeatherDataService.ɵprov = /*@__PURE__*/i0.ɵɵdefineInjectable({\n  token: WeatherDataService,\n  factory: WeatherDataService.ɵfac,\n  providedIn: 'root'\n});","map":{"version":3,"sources":["C:/Users/stephen/Documents/GitHub/weather-app/src/app/weatherData.service.ts"],"names":["environment","i0","i1","WeatherDataService","constructor","http","zipCodes","localStorage","getItem","weatherData","loadWeatherData","data","split","i","length","get","apiBaseUrl","responseType","subscribe","result","push","Object","assign","zipcode","addLoc","locZipCode","setItem","addWeatherToList","zipCode","remove","index","newZipCodes","splice","ɵfac","WeatherDataService_Factory","t","ɵɵinject","HttpClient","ɵprov","ɵɵdefineInjectable","token","factory","providedIn"],"mappings":"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","sourcesContent":["import { environment } from \"src/environments/environment\";\r\nimport * as i0 from \"@angular/core\";\r\nimport * as i1 from \"@angular/common/http\";\r\nexport class WeatherDataService {\r\n    constructor(http) {\r\n        this.http = http;\r\n        this.zipCodes = localStorage.getItem(\"zipCodes\") ? localStorage.getItem(\"zipCodes\") : '';\r\n        this.weatherData = [];\r\n        this.loadWeatherData = async () => {\r\n            if (this.zipCodes === '') {\r\n                return;\r\n            }\r\n            let data = this.zipCodes.split(',');\r\n            for (let i = 0; i < data.length; i++) {\r\n                this.http.get(environment.apiBaseUrl + `weather?zip=${data[i]}&units=imperial&appid=5a4b2d457ecbef9eb2a71e480b947604`, {\r\n                    responseType: \"json\"\r\n                }).subscribe((result) => {\r\n                    this.weatherData.push(Object.assign(Object.assign({}, result), { zipcode: data[i] }));\r\n                });\r\n            }\r\n        };\r\n        this.loadWeatherData();\r\n    }\r\n    addLoc(locZipCode) {\r\n        this.zipCodes = this.zipCodes === '' ? ('' + locZipCode) : (this.zipCodes + ',' + locZipCode);\r\n        localStorage.setItem(\"zipCodes\", this.zipCodes);\r\n        this.addWeatherToList(locZipCode);\r\n    }\r\n    addWeatherToList(zipCode) {\r\n        this.http.get(environment.apiBaseUrl + `zip=${zipCode}&units=imperial&appid=5a4b2d457ecbef9eb2a71e480b947604`, {\r\n            responseType: \"json\"\r\n        }).subscribe((result) => {\r\n            this.weatherData.push(Object.assign(Object.assign({}, result), { zipcode: zipCode }));\r\n        });\r\n    }\r\n    remove(index) {\r\n        let data = localStorage.getItem(\"zipCodes\");\r\n        let newZipCodes = '';\r\n        data = data.split(',');\r\n        data.splice(index, 1);\r\n        for (let i = 0; i < data.length; i++) {\r\n            newZipCodes = newZipCodes === '' ? (data[i]) : (newZipCodes + ',' + data[i]);\r\n        }\r\n        localStorage.setItem(\"zipCodes\", newZipCodes);\r\n        this.weatherData.splice(index, 1);\r\n    }\r\n}\r\nWeatherDataService.ɵfac = function WeatherDataService_Factory(t) { return new (t || WeatherDataService)(i0.ɵɵinject(i1.HttpClient)); };\r\nWeatherDataService.ɵprov = /*@__PURE__*/ i0.ɵɵdefineInjectable({ token: WeatherDataService, factory: WeatherDataService.ɵfac, providedIn: 'root' });\r\n"]},"metadata":{},"sourceType":"module"}